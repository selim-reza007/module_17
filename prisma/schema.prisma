// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id               BigInt             @id @default(autoincrement()) @db.UnsignedBigInt
  firstName        String
  lastName         String
  email            String             @unique
  mobile           String
  password         String
  otp              String
  created_at       DateTime           @default(now()) @db.Timestamp(0)
  updated_at       DateTime           @default(now()) @updatedAt @db.Timestamp(0)
  customers        customers[]
  invoices         invoices[]
  categories       categories[]
  products         products[]
  invoice_products invoice_products[]
}

model customers {
  id         BigInt     @id @default(autoincrement()) @db.UnsignedBigInt
  name       String
  email      String
  mobile     String
  created_at DateTime   @default(now()) @db.Timestamp(0)
  updated_at DateTime   @default(now()) @updatedAt @db.Timestamp(0)
  users      users?     @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  user_id    BigInt     @db.UnsignedBigInt
  invoices   invoices[]
}

model invoices {
  id               BigInt             @id @default(autoincrement()) @db.UnsignedBigInt
  total            String
  discount         String
  vat              String
  payable          String
  created_at       DateTime           @default(now()) @db.Timestamp(0)
  updated_at       DateTime           @default(now()) @updatedAt @db.Timestamp(0)
  users            users?             @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  user_id          BigInt             @db.UnsignedBigInt
  customers        customers?         @relation(fields: [customer_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  customer_id      BigInt             @db.UnsignedBigInt
  invoice_products invoice_products[]
}

model categories {
  id         BigInt     @id @default(autoincrement()) @db.UnsignedBigInt
  name       String
  created_at DateTime   @default(now()) @db.Timestamp(0)
  updated_at DateTime   @default(now()) @updatedAt @db.Timestamp(0)
  users      users?     @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  user_id    BigInt     @db.UnsignedBigInt
  products   products[]
}

model products {
  id               BigInt             @id @default(autoincrement()) @db.UnsignedBigInt
  name             String
  price            String
  unit             String
  img_url          String
  created_at       DateTime           @default(now()) @db.Timestamp(0)
  updated_at       DateTime           @default(now()) @updatedAt @db.Timestamp(0)
  categories       categories?        @relation(fields: [category_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  category_id      BigInt             @db.UnsignedBigInt
  users            users?             @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  user_id          BigInt             @db.UnsignedBigInt
  invoice_products invoice_products[]
}

model invoice_products {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  qty        String
  sale_price String
  created_at DateTime  @default(now()) @db.Timestamp(0)
  updated_at DateTime  @default(now()) @updatedAt @db.Timestamp(0)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  user_id    BigInt    @db.UnsignedBigInt
  invoices   invoices? @relation(fields: [invoice_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  invoice_id BigInt    @db.UnsignedBigInt
  products   products? @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  product_id BigInt    @db.UnsignedBigInt
}
